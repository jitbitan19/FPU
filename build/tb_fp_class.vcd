$date
	Fri Nov  8 22:45:26 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_fp_mul $end
$var wire 1 ! pzero $end
$var wire 1 " pnorm $end
$var wire 1 # pnan $end
$var wire 1 $ pinf $end
$var wire 1 % pdnorm $end
$var wire 64 & p [63:0] $end
$var reg 64 ' a [63:0] $end
$var reg 64 ( b [63:0] $end
$scope module u $end
$var wire 64 ) a [63:0] $end
$var wire 64 * b [63:0] $end
$var wire 64 + p [63:0] $end
$var wire 106 , res [105:0] $end
$var wire 1 - bzero $end
$var wire 1 . bnorm $end
$var wire 1 / bnan $end
$var wire 53 0 bman [52:0] $end
$var wire 1 1 binf $end
$var wire 13 2 bexp [12:0] $end
$var wire 1 3 bdnorm $end
$var wire 1 4 azero $end
$var wire 1 5 anorm $end
$var wire 1 6 anan $end
$var wire 53 7 aman [52:0] $end
$var wire 1 8 ainf $end
$var wire 13 9 aexp [12:0] $end
$var wire 1 : adnorm $end
$var reg 1 % dnorm $end
$var reg 1 $ inf $end
$var reg 1 # nan $end
$var reg 1 " norm $end
$var reg 13 ; pexp [12:0] $end
$var reg 53 < pman [52:0] $end
$var reg 1 = ps $end
$var reg 64 > pt [63:0] $end
$var reg 13 ? t1exp [12:0] $end
$var reg 13 @ t2exp [12:0] $end
$var reg 53 A tman [52:0] $end
$var reg 1 ! zero $end
$scope module u1 $end
$var wire 1 : dnorm $end
$var wire 64 B f [63:0] $end
$var wire 1 8 inf $end
$var wire 1 6 nan $end
$var wire 1 5 norm $end
$var wire 1 4 zero $end
$var wire 1 C man0 $end
$var wire 1 D exp1 $end
$var wire 1 E exp0 $end
$var reg 13 F exp [12:0] $end
$var reg 53 G man [52:0] $end
$var reg 53 H mask [52:0] $end
$var reg 6 I sh [5:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 J i [31:0] $end
$upscope $end
$upscope $end
$scope module u2 $end
$var wire 1 3 dnorm $end
$var wire 64 K f [63:0] $end
$var wire 1 1 inf $end
$var wire 1 / nan $end
$var wire 1 . norm $end
$var wire 1 - zero $end
$var wire 1 L man0 $end
$var wire 1 M exp1 $end
$var wire 1 N exp0 $end
$var reg 13 O exp [12:0] $end
$var reg 53 P man [52:0] $end
$var reg 53 Q mask [52:0] $end
$var reg 6 R sh [5:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 S i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx S
b0 R
b11111111111111111111111111111111111111111111111111111 Q
b0 P
b0 O
1N
0M
1L
b0 K
b0 J
b111111 I
b11111111111111111111111111111111111111111111111111111 H
b1111111111111111111111111111111111111111111111111111 G
b1101111000010 F
1E
0D
0C
b1111111111111111111111111111111111111111111111111111 B
b0 A
b0 @
b0 ?
b0 >
0=
b0 <
b10000000000 ;
1:
b1101111000010 9
08
b1111111111111111111111111111111111111111111111111111 7
06
05
04
03
b0 2
01
b0 0
0/
0.
1-
b0 ,
b0 +
b0 *
b1111111111111111111111111111111111111111111111111111 )
b0 (
b1111111111111111111111111111111111111111111111111111 '
b0 &
0%
0$
0#
0"
1!
$end
#10000
1"
b11101001011011010011001100001001010000011100100000100 <
b10000000011 ;
1.
0$
b11 @
b11101001011011010011001100001001010000011100100000100 A
b11 ?
15
0-
0:
b111010010110110100110011000010010100000111001000001001110110010010000100000011100001011100011001111110000 ,
b10100100000110001001001101110100101111000110101010000 0
b10100100000110001001001101110100101111000110101010000 P
b10 2
b10 O
0N
0L
b0 J
b0 I
b10110110000101000111101011100001010001111010111000011 7
b10110110000101000111101011100001010001111010111000011 G
b1 9
b1 F
0E
0!
b100000000111101001011011010011001100001001010000011100100000100 &
b100000000111101001011011010011001100001001010000011100100000100 +
b100000000111101001011011010011001100001001010000011100100000100 >
b100000000100100100000110001001001101110100101111000110101010000 (
b100000000100100100000110001001001101110100101111000110101010000 *
b100000000100100100000110001001001101110100101111000110101010000 K
b100000000010110110000101000111101011100001010001111010111000011 '
b100000000010110110000101000111101011100001010001111010111000011 )
b100000000010110110000101000111101011100001010001111010111000011 B
#100000
